"use strict";var __importDefault=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.minify=void 0;const fs_1=__importDefault(require("fs")),path_1=__importDefault(require("path")),terser_1=__importDefault(require("terser")),csso_1=__importDefault(require("csso")),html_minifier_1=__importDefault(require("html-minifier")),minify=async(t,e)=>{if(null==t||""===t)throw new Error("not set source directory");const s=!0===e?.infoLog,i=!1!==e?.js,r=!1!==e?.css,a=!1!==e?.html,o=async t=>{const e=fs_1.default.readdirSync(t);for await(const f of e){if(f.startsWith("."))continue;const e=path_1.default.join(t,f);if(fs_1.default.statSync(e).isDirectory())await o(e);else if(i&&/.*\.js$/.test(f)){s&&process.stdout.write(`js   : ${e}\n`);const t={};t[e]=extractData(e);try{const s=await terser_1.default.minify(t);fs_1.default.writeFileSync(e,s.code)}catch(t){process.stderr.write(`${String(t)}\n`)}}else r&&/.*\.css$/.test(f)?(s&&process.stdout.write(`css  : ${e}`),fs_1.default.writeFileSync(e,csso_1.default.minify(extractData(e)).css)):a&&/.*\.html$/.test(f)&&(s&&process.stdout.write(`html : ${e}`),fs_1.default.writeFileSync(e,html_minifier_1.default.minify(extractData(e),{caseSensitive:!0,collapseWhitespace:!0})))}};await o(t)};exports.minify=minify;const extractData=t=>fs_1.default.readFileSync(t,"utf8").toString();